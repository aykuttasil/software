<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>webapi on </title>
    <link>https://yazilim.aykutasil.com/tags/webapi/</link>
    <description>Recent content in webapi on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 12 Nov 2019 10:17:17 +0300</lastBuildDate>
    
	<atom:link href="https://yazilim.aykutasil.com/tags/webapi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Asp.Net Core Session</title>
      <link>https://yazilim.aykutasil.com/aspnetcore-session/</link>
      <pubDate>Tue, 12 Nov 2019 10:17:17 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/aspnetcore-session/</guid>
      <description>Asp.Net Core Session Kullanımı Asp.Net Core 2.1 ve üstü sürüme sahip projelerinizde Session kullanmak için Startup.cs dosyanızı aşağıdaki yöntemlerden birini seçerek güncellemeniz gerekmektedir.
Yöntem 1   Yöntem 2   Neden Asp.Net Core 2.1 ve sonrası? 2018&amp;rsquo;de uygulanması zorunlu hale gelen Avrupa Veri Koruma Kanunu ile birlikte, şirketlere kişisel verileri kullanması konusunda bazı kısıtlamalar ve uygulaması gereken bazı zorunluluklar getirilmiştir. Bu zorunluluklardan şu an için bizi ilgilendiren kısmı cookielerin kullanımı.</description>
    </item>
    
    <item>
      <title>ASP.Net Core app.Run() Middleware</title>
      <link>https://yazilim.aykutasil.com/aspnetcore-run-middleware/</link>
      <pubDate>Mon, 15 Apr 2019 22:08:14 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/aspnetcore-run-middleware/</guid>
      <description>ASP.NET Core Run Method ASP.NET Core ile birlikte gelen middleware konsepti sayesinde request-response süreçleri arasına girerek kendi mantıksal devremizi yazmamız çok kolay hale gelmiştir.
 Yukarıda ki gibi Startup.cs sınıfı içerisindeki Configure fonksiyonuna app.Run() diyerek middleware&amp;lsquo;ımızı ekleyebiliriz.
Peki tam olarak app.Run() metodu nasıl çalışıyor? app.Run() middlaware&amp;rsquo;ı ile istenilen bir kod bloğunu çalıştırabilir ve uygulamamıza kısa devre yaptırabiliriz. Yani pipeline akışı eğer Run() içerisine girerse, sonraki kod blokları çalışmayacaktır.
 Yukarıda ki kodun çıktısı sadece Response 1 olacak ve sonraki kod bloğu çalışmayacaktır.</description>
    </item>
    
  </channel>
</rss>