<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on </title>
    <link>/tags/java/</link>
    <description>Recent content in java on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 11 Jan 2017 19:59:08 +0300</lastBuildDate>
    
	<atom:link href="/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Android ile WebView EtkileÅŸimi</title>
      <link>/android-webview-etkilesimi/</link>
      <pubDate>Wed, 11 Jan 2017 19:59:08 +0300</pubDate>
      
      <guid>/android-webview-etkilesimi/</guid>
      <description>KÄ±sa Hikaye : ÃœstÃ¼nde Ã§alÄ±ÅŸmakta olduÄŸum bir projede kredi kartÄ± ile Ã¶deme yapÄ±sÄ± kurmam gerekti. KÄ±saca projenin yapÄ±sÄ±ndan bahsedecek olursak
 Backend : .Net Client : Android (Java) Ã–deme altyapÄ±sÄ± : Ä°yzico  Client tarafÄ±nda rest isteÄŸiyle tÃ¼m iÅŸlemlerimizi backend tarafÄ±nda yapÄ±yoruz. Ã–deme yapÄ±mÄ±zÄ± da bu doÄŸrultuda geliÅŸtirdik.
Problem : 3DS ile Ã¶deme almaya Ã§alÄ±ÅŸtÄ±ÄŸÄ±mÄ±zda malumunuz iÅŸin iÃ§erisine bankanÄ±n bize telefonumuza gelen ÅŸifreyi girmemiz iÃ§in gÃ¶ndermiÅŸ olduÄŸu web sayfasÄ± vs. giriyor.</description>
    </item>
    
    <item>
      <title>ExecutorService submit() â€“ execute()</title>
      <link>/post/executorservice-submit-execute/</link>
      <pubDate>Wed, 11 Jan 2017 19:26:49 +0300</pubDate>
      
      <guid>/post/executorservice-submit-execute/</guid>
      <description>ExecutorService submit() â€“ execute() Link : http://javarevisited.blogspot.com.tr/2016/04/difference-between-ExecutorServie-submit-vs-Executor-execute-method-in-Java.html</description>
    </item>
    
    <item>
      <title>Runnable() &amp; Callable()</title>
      <link>/post/runnable-callable/</link>
      <pubDate>Wed, 11 Jan 2017 18:55:08 +0300</pubDate>
      
      <guid>/post/runnable-callable/</guid>
      <description>Runnable() &amp;amp; Callable() AyrÄ±ntÄ±lÄ± aÃ§Ä±klama iÃ§in bu siteyi kullanabilirsiniz.</description>
    </item>
    
    <item>
      <title>RxJava range() KullanÄ±mÄ±</title>
      <link>/post/rxjava-range-kullan%C4%B1m%C4%B1/</link>
      <pubDate>Wed, 11 Jan 2017 18:52:51 +0300</pubDate>
      
      <guid>/post/rxjava-range-kullan%C4%B1m%C4%B1/</guid>
      <description>RxJava range() KullanÄ±mÄ± **Ã–rnek kod:&amp;ndash;
private void range() { Observable.range(3, 5).subscribeOn(Schedulers.io()) .subscribe(success -&amp;gt; { Log.i(TAG, &amp;#34;val: &amp;#34; + success.toString()); }); } AÃ§Ä±klama:
Ä°lk deÄŸer 3 kabul edilerek sonraki 5 sayÄ± iÃ§in teker teker onNext() Ã§aÄŸÄ±rÄ±lÄ±r. Yani 3 , 4, 5, 6, 7
YukarÄ±da ki kodun Ã§Ä±ktÄ±sÄ± aÅŸaÄŸÄ±daki gibidir.
I/MainActivity: val: 3 I/MainActivity: val: 4 I/MainActivity: val: 5 I/MainActivity: val: 6 I/MainActivity: val: 7 RxJava candÄ±r. ğŸ˜‰</description>
    </item>
    
    <item>
      <title>RxJava scan() KullanÄ±mÄ±</title>
      <link>/post/rxjava-scan-kullan%C4%B1m%C4%B1/</link>
      <pubDate>Wed, 11 Jan 2017 18:49:21 +0300</pubDate>
      
      <guid>/post/rxjava-scan-kullan%C4%B1m%C4%B1/</guid>
      <description>RxJava scan() KullanÄ±mÄ± RxJava da scan() kullanÄ±mÄ± iki ÅŸekilde olur.
   Ä°lk deÄŸer atamasÄ± yapÄ±larak    private void scan() { Observable.just(3, 5, 7, 9) .scan(10,(val1, val2) -&amp;gt; { //  Log.i(TAG, &amp;#34;val1: &amp;#34; + val1.toString()); Log.i(TAG, &amp;#34;val2: &amp;#34; + val2.toString()); return val1 + val2; }).subscribeOn(Schedulers.io()) .subscribe(success -&amp;gt; { Log.i(TAG, &amp;#34;Sonuc:&amp;#34; + success.toString()); }); }   Ä°lk deÄŸer atamasÄ± yapÄ±lmadan    private void scan() { Observable.</description>
    </item>
    
    <item>
      <title>RxJava reduce() KullanÄ±mÄ±</title>
      <link>/post/rxjava-reduce-kullan%C4%B1m%C4%B1/</link>
      <pubDate>Wed, 11 Jan 2017 18:42:04 +0300</pubDate>
      
      <guid>/post/rxjava-reduce-kullan%C4%B1m%C4%B1/</guid>
      <description>RxJava reduce() KullanÄ±mÄ± reduce() fonskyionu iki ÅŸekilde Ã§alÄ±ÅŸÄ±r;
 1  .reduce(new BiFunction&amp;lt;Integer, Integer, Integer&amp;gt;() { @Override public Integer apply(Integer val1, Integer val2) throws Exception { return null; } })  2  .reduce(10,new BiFunction&amp;lt;Integer, Integer, Integer&amp;gt;() { @Override public Integer apply(Integer val1, Integer val2) throws Exception { return null; } }) 1 ile 2 nin farkÄ±, 2 de gÃ¶rÃ¼ldÃ¼ÄŸÃ¼ Ã¼zere fonksiyona baÅŸlangÄ±Ã§ deÄŸeri atanabilmesidir.
AÅŸaÄŸÄ±daki Ã¶rneklerde daha net gÃ¶rebilirsiniz.</description>
    </item>
    
    <item>
      <title>Android Library &amp; Bintray</title>
      <link>/post/android-library-bintray/</link>
      <pubDate>Wed, 11 Jan 2017 17:27:29 +0300</pubDate>
      
      <guid>/post/android-library-bintray/</guid>
      <description>Android uygulamasÄ± yazarken bazÄ± oluÅŸturmuÅŸ olduÄŸunuz yapÄ±larÄ± tekrar tekrar yazmak durumunda kalÄ±yorsanÄ±z, sizin de artÄ±k kendi kÃ¼tÃ¼phanenizi yazmanÄ±zÄ±n zamanÄ± gelmiÅŸ geÃ§iyor demektir. BÃ¶yle bir durum sÃ¶z konusu olmak zorunda deÄŸil tabi library oluÅŸturmak iÃ§in ğŸ™‚
Bu yazÄ±nÄ±n konusu Android Library oluÅŸturmak, oluÅŸturmuÅŸ olduÄŸumuz bu kÃ¼tÃ¼phaneyi maven ve jcenter repository e deploy etmek olucak.
Ve baÅŸlayabiliriz.
Ä°lk olarak Android Studio yu aÃ§arak File &amp;gt; New &amp;gt; New Project e tÄ±klayÄ±p yeni bir proje oluÅŸturalÄ±m.</description>
    </item>
    
    <item>
      <title>Android Runtime Permission</title>
      <link>/post/android-runtime-permission/</link>
      <pubDate>Wed, 11 Jan 2017 17:24:52 +0300</pubDate>
      
      <guid>/post/android-runtime-permission/</guid>
      <description>YavaÅŸ yavaÅŸ mevcut android cihazlarÄ±nÄ±n API level dÃ¼zeyi doÄŸal olarak yÃ¼kselmekte ve bizlerinde tabi ki buna ayak uydurmasÄ± gerekmekte.
Bunlardan biri de Android M â€“ Marshmallow (23) ile gelen Runtime Permissions olayÄ±.
KullanÄ±cÄ± aÃ§Ä±sÄ±ndan bakÄ±ldÄ±ÄŸÄ±nda oldukÃ§a yararlÄ± birÅŸey gibi duruyor ama tabi ki biz kullanÄ±cÄ±lar runtime sÄ±rasÄ±nda Ã§Ä±kan permission dialog daki yazÄ±yÄ± ne kadar okuruz ve buna gÃ¶re onay veririz meÃ§hul. AslÄ±na bakarsanÄ±z Ã§ok da okunacaÄŸÄ±nÄ± dÃ¼ÅŸÃ¼nmÃ¼yorum ama olsun yine de gÃ¼zel.</description>
    </item>
    
    <item>
      <title>Android Glide ve Palette KullanÄ±mÄ±</title>
      <link>/post/android-glide-ve-palette-kullan%C4%B1m%C4%B1/</link>
      <pubDate>Wed, 11 Jan 2017 17:11:30 +0300</pubDate>
      
      <guid>/post/android-glide-ve-palette-kullan%C4%B1m%C4%B1/</guid>
      <description>Google Ä±n resim iÅŸlemleri iÃ§in geliÅŸtirmiÅŸ olduÄŸu Glide kÃ¼tÃ¼phanesi Android kaynaklarÄ±nÄ±, cache mekanizmasÄ±nÄ± vs. verimli ÅŸekilde kullanarak uygulamanÄ±za hÄ±z ve kalite kazandÄ±rÄ±r.
Sizde projenizde resimlerle ilgili herhangi bir iÅŸlem yapÄ±yorsanÄ±z bu kÃ¼tÃ¼phaneyi incelemenizi tavsiye ediyorum.
  Github : https://github.com/bumptech/glide
  Gradle : compile â€˜com.github.florent37:glidepalette:1.0.6â€™
  Google Ä±n geliÅŸtirmiÅŸ olduÄŸu Palette kÃ¼tÃ¼phanesi ise, resimlerinizin renkleriyle ilgilenir. Daha farklÄ± iÅŸlemler iÃ§inde kullanÄ±labilir resim boyutlandÄ±rma vs. gibi. Ama renklerle ilgili iÅŸlemler iÃ§in oldukÃ§a gÃ¼zel bir kÃ¼tÃ¼phanedir.</description>
    </item>
    
    <item>
      <title>Android ViewPager</title>
      <link>/post/android-viewpager/</link>
      <pubDate>Wed, 11 Jan 2017 17:07:51 +0300</pubDate>
      
      <guid>/post/android-viewpager/</guid>
      <description>Android ViewPager yapÄ±sÄ± iÃ§erisinde birÃ§ok hazÄ±r fonksiyonu, animasyonu ve Ã¶zelleÅŸtirilebilir kontrolleri barÄ±ndÄ±rÄ±r.
Ä°htiyaÃ§larÄ±mÄ±z doÄŸrultusunda bu yapÄ±yÄ± Ã¶zelleÅŸtirebilir ve ViewPager Ä±n bize sunmuÅŸ olduÄŸu rahatlÄ±ÄŸÄ± kullanabiliriz.</description>
    </item>
    
    <item>
      <title>Java Collections</title>
      <link>/post/java-collections/</link>
      <pubDate>Wed, 11 Jan 2017 16:10:10 +0300</pubDate>
      
      <guid>/post/java-collections/</guid>
      <description>Collections.swap Swap kelime anlamÄ± ile takas anlamÄ±na gelmektedir. Mevcut dizimiz iÃ§erisinde elemanlarÄ±n yerlerini deÄŸiÅŸtirmeye yarar.
private static final String[] STRINGS = new String[]{ &amp;#34;1&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;3&amp;#34;, &amp;#34;4&amp;#34;, &amp;#34;5&amp;#34; }; private final List mItems = new ArrayList&amp;lt;&amp;gt;(); public void setArray() { mItems.addAll(Arrays.asList(STRINGS)); } mItems listemizi yazdÄ±rdÄ±ÄŸÄ±mÄ±zda sonuÃ§ ÅŸu ÅŸekilde olacaktÄ±r. // 1,2,3,4,5  private void elemanYerDegistir() { Collections.swap(mItems, 0, 4); } mItems listemizi yazdÄ±rdÄ±ÄŸÄ±mÄ±zda sonuÃ§ ÅŸu ÅŸekilde olacaktÄ±r. // 5,2,3,4,1 </description>
    </item>
    
    <item>
      <title>Android Custom Toolbar Title</title>
      <link>/post/android-custom-toolbar-title/</link>
      <pubDate>Wed, 11 Jan 2017 16:01:33 +0300</pubDate>
      
      <guid>/post/android-custom-toolbar-title/</guid>
      <description>Android Toolbar bileÅŸeni Ã§ok yÃ¶nlÃ¼ bir yapÄ±ya sahiptir. Android Design Library kullanarak ve AppBarLayout iÃ§erisinde tanÄ±mlanarak oldukÃ§a farklÄ± ÅŸekillere bÃ¼rÃ¼nebilir.
Genel kullanÄ±mÄ± aÅŸaÄŸÄ±daki gibidir.
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt; &amp;lt;android.support.design.widget.CoordinatorLayout xmlns:android=&amp;#34;http://schemas.android.com/apk/res/android&amp;#34; xmlns:app=&amp;#34;http://schemas.android.com/apk/res-auto&amp;#34; xmlns:tools=&amp;#34;http://schemas.android.com/tools&amp;#34; android:layout_width=&amp;#34;match_parent&amp;#34; android:layout_height=&amp;#34;match_parent&amp;#34; android:background=&amp;#34;@color/primary_dark&amp;#34; tools:context=&amp;#34;.MainActivity&amp;#34;&amp;gt; &amp;lt;FrameLayout android:id=&amp;#34;@+id/container&amp;#34; android:layout_width=&amp;#34;match_parent&amp;#34; android:layout_height=&amp;#34;match_parent&amp;#34;&amp;gt; &amp;lt;/FrameLayout&amp;gt; &amp;lt;android.support.design.widget.FloatingActionButton android:id=&amp;#34;@+id/fab&amp;#34; android:layout_width=&amp;#34;wrap_content&amp;#34; android:layout_height=&amp;#34;wrap_content&amp;#34; android:layout_gravity=&amp;#34;bottom|end&amp;#34; android:layout_margin=&amp;#34;@dimen/fab_margin&amp;#34; android:src=&amp;#34;@android:drawable/ic_dialog_email&amp;#34; /&amp;gt; &amp;lt;android.support.design.widget.AppBarLayout android:layout_width=&amp;#34;match_parent&amp;#34; android:layout_height=&amp;#34;wrap_content&amp;#34; app:elevation=&amp;#34;0dp&amp;#34;&amp;gt; &amp;lt;android.support.v7.widget.Toolbar android:id=&amp;#34;@+id/toolbar&amp;#34; android:layout_width=&amp;#34;match_parent&amp;#34; android:layout_height=&amp;#34;wrap_content&amp;#34; android:background=&amp;#34;@color/primary_dark&amp;#34; android:minHeight=&amp;#34;?attr/actionBarSize&amp;#34; app:popupTheme=&amp;#34;@style/AppTheme.PopupOverlay&amp;#34;/&amp;gt; &amp;lt;/android.support.design.widget.AppBarLayout&amp;gt; &amp;lt;/android.support.design.widget.CoordinatorLayout&amp;gt; app:elevation=&amp;quot;0dp&amp;quot; // AppBarLayout iÃ§erisinde ki bu tanÄ±mlama default olarak tanÄ±mlanmÄ±ÅŸ gÃ¶lgeyi kaldÄ±rÄ±r.</description>
    </item>
    
    <item>
      <title>Foreground Service ile FusedLocationApi KullanÄ±mÄ±</title>
      <link>/post/foreground-service-ile-fusedlocationapi-kullan%C4%B1m%C4%B1/</link>
      <pubDate>Wed, 11 Jan 2017 15:27:59 +0300</pubDate>
      
      <guid>/post/foreground-service-ile-fusedlocationapi-kullan%C4%B1m%C4%B1/</guid>
      <description>Android service yapÄ±sÄ±, Androidâ€™in temel bileÅŸenlerinden olup genel kullanÄ±m amacÄ± yan iÅŸ parÃ§acÄ±ÄŸÄ± oluÅŸturmaktÄ±r. Uzun sÃ¼ren iÅŸlemler (download vb.) iÃ§in olmazsa olmaz bileÅŸendir. Android in service bileÅŸenini kendi ihtiyaÃ§larÄ±nÄ±z doÄŸrultusunda Ã¶zelleÅŸtirebilir ve uygulamanÄ±zÄ± modern bir yapÄ±ya kavuÅŸturabilirsiniz.
Burada yapacaÄŸÄ±mÄ±z Ã¶rnekte kÄ±saca ÅŸu aÅŸamalarÄ± gÃ¶rÃ¼cez;
 Service i foreground olarak baÅŸlatmak Ongoing(devamlÄ± gÃ¶zÃ¼ken) notification oluÅŸturmak GoogleApiClient a baÄŸlanmak Location bilgisini notification da gÃ¶stermek  Ä°lk olarak Service imiz kodlarÄ±nÄ± yazalÄ±m. Gerekli aÃ§Ä±klamalar kodlarÄ±n arasÄ±nda mevcuttur.</description>
    </item>
    
    <item>
      <title>Android GcmNetworkManager KullanÄ±mÄ±</title>
      <link>/post/android-gcmnetworkmanager-kullan%C4%B1m%C4%B1/</link>
      <pubDate>Wed, 11 Jan 2017 01:43:53 +0300</pubDate>
      
      <guid>/post/android-gcmnetworkmanager-kullan%C4%B1m%C4%B1/</guid>
      <description>GcmNetworkManager kullanarakÂ Android de network tabanlÄ± iÅŸlemlerinizi olabildiÄŸince kontrollÃ¼ bir ÅŸekide yapabilirsiniz.
GcmNetworkManager Ä±n kullanÄ±m alanÄ± daha Ã§ok asenkron ve periodic network iÅŸlemlerinizi yapÄ±landÄ±rmaktÄ±r.
Tek sefer Ã§alÄ±ÅŸacak veya Periodic olarak Ã§alÄ±ÅŸacak iÅŸlemleriniz iÃ§in 2 tip belirlenmiÅŸtir.
 OneoffTask PeriodicTask   OneoffTask KullanÄ±mÄ±
OneoffTask oneoff = new OneoffTask.Builder() // UygulamanÄ±zÄ± kapatsanÄ±z bile tekrar aÃ§tÄ±ÄŸÄ±nÄ±z da network iÅŸleminiz iÅŸleme konulur.  // Yani isteÄŸinizin kalÄ±cÄ± olup olmamasÄ±nÄ± bu parametre ile ayarlayabilirsiniz.  .</description>
    </item>
    
    <item>
      <title>Android SMS Receiver</title>
      <link>/post/android-sms-receiver/</link>
      <pubDate>Wed, 11 Jan 2017 01:42:54 +0300</pubDate>
      
      <guid>/post/android-sms-receiver/</guid>
      <description>Android SMS Receiver Android de gelen sms leri dinlemek ve uygulamanÄ±zÄ±n akÄ±ÅŸÄ±nÄ± gelen sms lere gÃ¶re ÅŸekillendirmek iÃ§in aÅŸaÄŸÄ±daki yapÄ±yÄ± kullanabilirsiniz.
Ä°lk olarak AndroidManifest.xml dosyanÄ±zda receiver tanÄ±mlamalÄ±sÄ±nÄ±z. Fakat biz bu receiver Ä± dinamik olarak tanÄ±mlÄ±caz. Bunu yapmamÄ±zÄ±n sebebi SMS i dinledikten sonra bu receiver Ä± silmek ve daha sonra gelen SMS lerin dinlenmesini Ã¶nlemek.
Siz uygulamÄ±nÄ±z da sÃ¼rekli bir SMS dinlemeye ihtiyaÃ§ duyarsanÄ±z receiver Ä± AndroidManifest.xml dosyanÄ±zda tanÄ±mlamalÄ±sÄ±nÄ±z.
Biz burda SMS dinlemesi yaparken Ã¶nlem amaÃ§lÄ± olarak CPU nun uyumasÄ±nÄ± Ã¶nlÃ¼yoruz.</description>
    </item>
    
    <item>
      <title>Android Internet Connection Receiver </title>
      <link>/post/android-internet-connection-receiver/</link>
      <pubDate>Wed, 11 Jan 2017 01:42:36 +0300</pubDate>
      
      <guid>/post/android-internet-connection-receiver/</guid>
      <description>UygulamanÄ±zÄ±n akÄ±ÅŸÄ±nÄ± internet kontrolÃ¼ yaparak yÃ¶netmeniz gerekebilir.
Bunun iÃ§in ilk olarak AndroidManifest.xml dosyasÄ±na receiver tanÄ±mÄ± yapmalÄ±sÄ±nÄ±z.
&amp;lt;receiver android:name=&amp;#34;.InternetConnectionReceiver&amp;#34;&amp;gt; &amp;lt;intent-filter&amp;gt; &amp;lt;action android:name=&amp;#34;android.net.conn.CONNECTIVITY_CHANGE&amp;#34; /&amp;gt; &amp;lt;/intent-filter&amp;gt; &amp;lt;/receiver&amp;gt; InternetConnectionReceiver
public class InternetConnectionReceiver extends BroadcastReceiver { @Override public void onReceive(Context context, Intent intent) { if (CheckConnection(context)) { } } } YukarÄ±da tanÄ±mlanmÄ±ÅŸ olan receiver, cihazÄ±n aÄŸ yapÄ±sÄ±nda herhangi bir deÄŸiÅŸiklik olduÄŸunda bunu yakalar. Ã–rneÄŸin wireless aÃ§Ä±kken kapattÄ±ÄŸÄ±nÄ±z da veya kapalÄ±yken aÃ§tÄ±ÄŸÄ±nÄ±z da bunu yakayabilirsiniz.
CheckConnection</description>
    </item>
    
    <item>
      <title>Android ActiveAndroid KullanÄ±mÄ±</title>
      <link>/post/android-activeandroid-kullan%C4%B1m%C4%B1/</link>
      <pubDate>Wed, 11 Jan 2017 01:00:19 +0300</pubDate>
      
      <guid>/post/android-activeandroid-kullan%C4%B1m%C4%B1/</guid>
      <description>Anroid ile ORM (Object Relational Mapping) kullanarak veritabanÄ± iÅŸlemlerinizi oldukÃ§a kolay yapabilirsiniz.
ActiveAndroid kÃ¼tÃ¼phanesi ORM kÃ¼tÃ¼phanelerinden biridir.
KÃ¼tÃ¼phaneyi buradan indirebilirsiniz.
KullanÄ±mÄ± oldukÃ§a basittir. Sadece birkaÃ§ noktaya Ã¶zellikle dikkat edilmesi gerekiyor. Bunlardan biri oluÅŸturmuÅŸ olduÄŸunuz tabloya yeni alanlar eklediÄŸiniz de tablonuzu gÃ¼ncellemek. Veya herhangi bir sebeple tabloda Ã§eÅŸitli iÅŸlemler yapmak.
AÅŸaÄŸÄ±da kÄ±saca Tablo oluÅŸturmaktan ve gerektiÄŸinde Tablo yu nasÄ±l gÃ¼ncelleyeceÄŸimizden bahsedicem.
@Table(name = &amp;#34;Items&amp;#34;) public class ModelSampleItem extends Model { @Column(name = &amp;#34;Name&amp;#34;) public String name; @Column(name = &amp;#34;Surname&amp;#34;) public String surname; @Column(name = &amp;#34;Phone&amp;#34;) public String phoneNumber; @Column(name = &amp;#34;Xyz&amp;#34;) public String xyz; @Column(name = &amp;#34;EMail&amp;#34;) public String email; @Column(name = &amp;#34;TryColumn&amp;#34;) public String tryColumn; @Column(name = &amp;#34;Column3&amp;#34;) public String column3; public ModelSampleItem() { super(); } } YukarÄ±da ki yapÄ±yÄ± kullanarak istediÄŸiniz Tablo yu oluÅŸturmanÄ±z mÃ¼mkÃ¼n.</description>
    </item>
    
    <item>
      <title>Android Key Hashes &amp; SHA1</title>
      <link>/post/android-key-hashes-sha1/</link>
      <pubDate>Tue, 10 Jan 2017 23:56:35 +0300</pubDate>
      
      <guid>/post/android-key-hashes-sha1/</guid>
      <description>Android Key Hashes &amp;amp; SHA1 Windows komut satÄ±rÄ±na aÅŸaÄŸÄ±daki komutu yazarak ulaÅŸabilirsiniz.
keytool -exportcert -alias androiddebugkey -keystore %HOMEPATH%\.android\debug.keystore | openssl sha1 -binary | openssl base64 openssl hatasÄ± alÄ±rsanÄ±z https://code.google.com/p/openssl-for-windows/downloads/detail?name=openssl-0.9.8k_X64.zip adresindeki dosyayÄ± indirdikten sonra Ã§Ä±kan dosyadaki bin klasÃ¶rÃ¼nÃ¼ ortam deÄŸiÅŸkenlerindeki PATH kÄ±smÄ±na eklerseniz sorun ortadan kalkacaktÄ±r.
Ortam deÄŸiÅŸkenlerine ulaÅŸmak iÃ§in : Denetim MasasÄ± &amp;gt; Sistem &amp;gt; GeliÅŸmiÅŸ SÄ°stem AyarlarÄ±
SHA1 ulaÅŸmak iÃ§in komut satÄ±rÄ±na aÅŸaÄŸÄ±daki kodu yazmanÄ±z yeterli olacaktÄ±r.
your_user_name yerine kendi kullanÄ±cÄ± adÄ±nÄ±zÄ± yazmayÄ± unutmayÄ±n.</description>
    </item>
    
    <item>
      <title>Android Spinner Text GÃ¼ncelleme</title>
      <link>/post/android-spinner-text-g%C3%BCncelleme/</link>
      <pubDate>Tue, 10 Jan 2017 23:00:03 +0300</pubDate>
      
      <guid>/post/android-spinner-text-g%C3%BCncelleme/</guid>
      <description>Dinamik Olarak Spinner Text GÃ¼ncelleme Android de Spinner yapÄ±sÄ± aÃ§Ä±lÄ±r menÃ¼ (dropdown) olarak kullanlan kullanÄ±ÅŸlÄ± bir componenttir.
FarklÄ± ihtiyaÃ§larÄ±nÄ±z doÄŸrultusunda Spinner Ä±nÄ±zÄ±n elemanlarÄ±nÄ±n deÄŸerini deÄŸiÅŸtirmek isteyebilirsiniz.
Ã–rneÄŸin bir ListView iniz var.Ve iÃ§erisinde aynÄ± kategoriden ama deÄŸiÅŸik durumlara sahip itemlar var ve siz bu itemlarÄ± durumuna gÃ¶re gruplandÄ±rÄ±p sayÄ±sÄ±nÄ± Spinner da gÃ¶stermek istiyorsunuz. Bunun iÃ§in aÅŸaÄŸÄ±da belirtecek olduÄŸum yapÄ±yÄ± kullanabilirsiniz.
Ã–ncellikle String.xml dosyasÄ±na Spinner Ä±mÄ±zda gÃ¶stereceÄŸimiz elemanlarÄ± tanÄ±mlÄ±yoruz.
String.xml
&amp;lt;string name=&amp;#34;pazartesi&amp;#34;&amp;gt;Pazartesi&amp;lt;/string&amp;gt; &amp;lt;string name=&amp;#34;sali&amp;#34;&amp;gt;SalÄ±&amp;lt;/string&amp;gt; &amp;lt;string name=&amp;#34;carsamba&amp;#34;&amp;gt;Ã‡arÅŸamba&amp;lt;/string&amp;gt; &amp;lt;string name=&amp;#34;persembe&amp;#34;&amp;gt;PerÅŸembe&amp;lt;/string&amp;gt; &amp;lt;string name=&amp;#34;cuma&amp;#34;&amp;gt;Cuma&amp;lt;/string&amp;gt; &amp;lt;string name=&amp;#34;cumartesi&amp;#34;&amp;gt;Cumartesi&amp;lt;/string&amp;gt; &amp;lt;string name=&amp;#34;pazar&amp;#34;&amp;gt;Pazar&amp;lt;/string&amp;gt; &amp;lt;string-array name=&amp;#34;array_gonderi_list_haftalik&amp;#34;&amp;gt; &amp;lt;item&amp;gt;@string/pazartesi&amp;lt;/item&amp;gt; &amp;lt;item&amp;gt;@string/sali&amp;lt;/item&amp;gt; &amp;lt;item&amp;gt;@string/carsamba&amp;lt;/item&amp;gt; &amp;lt;item&amp;gt;@string/persembe&amp;lt;/item&amp;gt; &amp;lt;item&amp;gt;@string/cuma&amp;lt;/item&amp;gt; &amp;lt;item&amp;gt;@string/cumartesi&amp;lt;/item&amp;gt; &amp;lt;item&amp;gt;@string/pazar&amp;lt;/item&amp;gt; &amp;lt;/string-array&amp;gt; SpinnerHelper.</description>
    </item>
    
  </channel>
</rss>