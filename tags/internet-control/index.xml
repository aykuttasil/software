<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>internet control on </title>
    <link>/tags/internet-control/</link>
    <description>Recent content in internet control on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 11 Jan 2017 01:42:36 +0300</lastBuildDate>
    
	<atom:link href="/tags/internet-control/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Android Internet Connection Receiver </title>
      <link>/post/android-internet-connection-receiver/</link>
      <pubDate>Wed, 11 Jan 2017 01:42:36 +0300</pubDate>
      
      <guid>/post/android-internet-connection-receiver/</guid>
      <description>Uygulamanızın akışını internet kontrolü yaparak yönetmeniz gerekebilir.
Bunun için ilk olarak AndroidManifest.xml dosyasına receiver tanımı yapmalısınız.
&amp;lt;receiver android:name=&amp;#34;.InternetConnectionReceiver&amp;#34;&amp;gt; &amp;lt;intent-filter&amp;gt; &amp;lt;action android:name=&amp;#34;android.net.conn.CONNECTIVITY_CHANGE&amp;#34; /&amp;gt; &amp;lt;/intent-filter&amp;gt; &amp;lt;/receiver&amp;gt; InternetConnectionReceiver
public class InternetConnectionReceiver extends BroadcastReceiver { @Override public void onReceive(Context context, Intent intent) { if (CheckConnection(context)) { } } } Yukarıda tanımlanmış olan receiver, cihazın ağ yapısında herhangi bir değişiklik olduğunda bunu yakalar. Örneğin wireless açıkken kapattığınız da veya kapalıyken açtığınız da bunu yakayabilirsiniz.
CheckConnection</description>
    </item>
    
  </channel>
</rss>