<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mobile on Aykut Asil</title>
    <link>https://yazilim.aykutasil.com/tags/mobile/</link>
    <description>Recent content in mobile on Aykut Asil</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 17 Jan 2020 18:13:00 +0300</lastBuildDate><atom:link href="https://yazilim.aykutasil.com/tags/mobile/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Android Background Location</title>
      <link>https://yazilim.aykutasil.com/android-background-location/</link>
      <pubDate>Fri, 17 Jan 2020 18:13:00 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/android-background-location/</guid>
      <description>Android 10 ile birlikte gelen değişiklerden biri de Location dinleme ile alakalıdır. Uygulamamız arka plandayken (background) ve ön plandayken (foreground) konum dinleme şekilleri farklılık göstermektedir. Uygulamımız bize görünür vaziyette ise yani foreground&amp;lsquo;da ise her hangi bir değişiklik yapmamıza gerek yoktur. Fakat Home tuşuna basarak veya başka bir uygulama açarak uygulamamızı arka plana atıyorsak ve bu sırada konum dinlemesinin devam etmesini istiyorsak bazı düzenlemeler yapmamız gerekmektedir.
İki şekilde background konum dinlemesi yapılabilir.</description>
    </item>
    
    <item>
      <title>Android DataBinding</title>
      <link>https://yazilim.aykutasil.com/android-databinding/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:27 +0300</pubDate>
      
      <guid>https://yazilim.aykutasil.com/android-databinding/</guid>
      <description>Android DataBinding Android dünyasında temiz kod(Clean Code) günümüzde çokça konuşulan konular arasında yer almakta ve neden temiz kod yazmalıyız ile alakalı bir çok makale yazılmaktadır.
Temiz kod yazmak için MVP, MVVM vs. kod tasarım mimarilerinden birini seçerek yazılan kodların ve etkileşimlerinin birbirinden ayrımını sağlamaktayız. Bu kod tasarım kalıpları ile beraber bize çok faydası olacak bir mimari daha bulunmakta: DataBinding
DataBinding Uygulamanın arayüzünü tasarlamak için kullandığımız layout dosyamızın içerisine Uygulamamızın arayüzünü oluşturmak için kullandığımız layout xml dosyalarına gerekli datayı doğrudan entegre ederek, arayüz değişikliği ile ilgili tüm akışların harici müdahaleye gerek kalmadan otomatik olarak gerçekleşmesini sağlayabiliriz.</description>
    </item>
    
  </channel>
</rss>
